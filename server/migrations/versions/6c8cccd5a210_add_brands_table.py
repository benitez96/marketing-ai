import sqlmodel

"""add brands table

Revision ID: 6c8cccd5a210
Revises: ca4d7276f01c
Create Date: 2024-05-01 18:10:33.357329

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6c8cccd5a210"
down_revision: Union[str, None] = "ca4d7276f01c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "brand",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "mission_statement", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "best_selling_products", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("site_url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "target_audience", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("current_email_list_size", sa.Integer(), nullable=False),
        sa.Column("niche", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "session",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("brand_id", sa.Integer(), nullable=False),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["brand_id"],
            ["brand.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.execute("TRUNCATE TABLE prompt")
    op.drop_constraint("prompt_chat_id_fkey", "prompt", type_="foreignkey")
    op.drop_table("chat")
    op.add_column("prompt", sa.Column("session_id", sa.Integer(), nullable=False))
    op.create_foreign_key(None, "prompt", "session", ["session_id"], ["id"])
    op.drop_column("prompt", "chat_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "prompt",
        sa.Column("chat_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "prompt", type_="foreignkey")
    op.create_foreign_key("prompt_chat_id_fkey", "prompt", "chat", ["chat_id"], ["id"])
    op.drop_column("prompt", "session_id")
    op.create_table(
        "chat",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "config",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], name="chat_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="chat_pkey"),
    )
    op.drop_table("session")
    op.drop_table("brand")
    # ### end Alembic commands ###
